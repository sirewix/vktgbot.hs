module Req( Request
          , request
          ) where

import Data.Text(Text,pack,unpack)
import Network.HTTP.Req
import qualified Network.HTTP.Client as HttpClient
import qualified Data.Aeson          as A

data Request m b = ( HttpMethod m
                   , HttpBody b
                   , HttpBodyAllowed (AllowsBody m) (ProvidesBody b)
                   ) => Request m String b

request :: (A.FromJSON resp)
      => Url s
      -> Maybe HttpClient.Proxy
      -> (Request m b) -- (GET/POST, method, req body)
      -> IO resp
request api proxy (Request method ep body) = do
    reqres <- runReq defaultHttpConfig { httpConfigProxy = proxy } $ do
        r <- req
              method
              (api /~ ep)
              body
              jsonResponse -- specify how to interpret response
              mempty -- query params, headers, explicit port number, etc.
        return (responseBody r :: A.Value)
    s <- resToM $ parseResult reqres
    return s
